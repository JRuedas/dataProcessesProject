install.packages(c("forecast", "ggfortify"))
library(dplyr)
library(utils) # for the read.csv
library(data.table) # For the rbindlist
library(ggplot2) # for plots
library(ggfortify)
library(gridExtra)
library(forecast)
# Load CSVs
setwd("~/dataProcessesProject/")
madrid_2017 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/dataWoNa/madrid_2017.csv")
View(madrid_2017)
madrid_2016 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/dataWoNa/madrid_2016.csv")
View(madrid_2016)
madrid_2018 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/dataWoNa/madrid_2018.csv")
View(madrid_2018)
stations <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/data/Madrid_pollution_level_dataset/stations.csv")
View(stations)
# Group CSVs
madrid_list <- list(madrid_2016, madrid_2017, madrid_2018)
madrid_temp <- as.data.frame(rbindlist(madrid_list, fill = T))
remove(madrid_2016)
remove(madrid_2017)
remove(madrid_2018)
remove(madrid_list)
# Data Wrangling
madrid_final <- madrid_temp[with(madrid_temp, order(date)),]
madrid_final$date<-as.POSIXct(madrid_final$date,format = "%Y-%m-%d %H:%M:%S", tz='CET')
pollutant <- madrid_final %>%
as.data.frame %>%
mutate(date_ymd=as.Date(date,format="%Y-%m-%d")) %>%
group_by(date_ymd) %>%
summarise(max_pol=max(O_3,na.rm=TRUE)) %>% # Can change the pollutant name here.Rest all codes works without change
as.data.frame %>%
mutate(y_m=paste(substr(date_ymd,1,nchar(date_ymd)+2),"-01")) %>%
group_by(y_m) %>%
summarise(avg_emission=mean(max_pol,na.rm=TRUE))
pol_flow <- data.frame("date"=as.Date(pollutant$y_m,format="%Y - %m - %d"),"count"=pollutant$avg_emission)
#converting to time series
pol_ts<-ts(pol_flow$count,frequency = 12,start = c(2016,01))
#ggplot format of ts plot
autoplot(pol_ts, ts.colour="darkgreen") +
xlab('Date') +
ylab('Count') +
ggtitle('Time Series of Ozone Pollutant')
pol_ts_decompose<-decompose(pol_ts)
actual <- autoplot(pol_ts_decompose$x) +
xlab("Year") +
ylab("Count") +
ggtitle("Actual time series of ozone")
seas <- autoplot(pol_ts_decompose$seasonal) +
xlab("Year") +
ylab("Count") +
ggtitle("Seasonality time series of ozone")
tren <- autoplot(pol_ts_decompose$trend) +
xlab("Year") +
ylab("Count") +
ggtitle("Trend time series of ozone")
grid.arrange(actual,seas,tren,ncol=1,top="Decomposition of Ozone time series")
### Training Arima
train_ts<-ts(pol_ts,start = c(2016,01),end=c(2018,12),frequency = 12)
train_pol_fit_arima<-auto.arima(train_ts)
train_pol_fit_arima
train_forecast_arima<-forecast(train_pol_fit_arima,24)
train_forecast_arima_df<-data.frame(train_forecast_arima)
train_forecast_arima_pt_forecast<-train_forecast_arima_df$Point.Forecast
forecast_train_arima<-data.frame("x"=as.Date(pol_flow$date[181:204],format="%Y - %m - %d"),"y"=train_forecast_arima_pt_forecast)
actual_train_arima<-data.frame("x"=as.Date(pol_flow$date,format="%Y - %m - %d"),"y"=pol_flow$count)
ggplot(forecast_train_arima,aes(x,y)) +
geom_line(aes(color="First line")) +
geom_line(data = actual_train_arima,aes(color="Second line")) +
xlab("Year") +
ylab("Count")+
labs(colors="Series") +
ggtitle("Training Vs Testing plot")+
scale_colour_manual(values = c("red","green"),
labels=c("Forecast", "Actual"))
pollutant <- madrid_final %>%
as.data.frame %>%
mutate(date_ymd=as.Date(date,format="%Y-%m-%d")) %>%
group_by(date_ymd) %>%
summarise(max_pol=max(O_3,na.rm=TRUE)) %>% # Can change the pollutant name here.Rest all codes works without change
as.data.frame %>%
mutate(y_m=paste(substr(date_ymd,1,nchar(date_ymd)+2),"-01")) %>%
group_by(y_m) %>%
summarise(avg_emission=mean(max_pol,na.rm=TRUE))
pol_flow <- data.frame("date"=as.Date(pollutant$y_m,format="%Y - %m - %d"),"count"=pollutant$avg_emission)
#converting to time series
pol_ts<-ts(pol_flow$count,frequency = 12,start = c(2016,01))
#ggplot format of ts plot
autoplot(pol_ts, ts.colour="darkgreen") +
xlab('Date') +
ylab('Count') +
ggtitle('Time Series of Ozone Pollutant')
pol_ts_decompose<-decompose(pol_ts)
actual <- autoplot(pol_ts_decompose$x) +
xlab("Year") +
ylab("Count") +
ggtitle("Actual time series of ozone")
seas <- autoplot(pol_ts_decompose$seasonal) +
xlab("Year") +
ylab("Count") +
ggtitle("Seasonality time series of ozone")
tren <- autoplot(pol_ts_decompose$trend) +
xlab("Year") +
ylab("Count") +
ggtitle("Trend time series of ozone")
grid.arrange(actual,seas,tren,ncol=1,top="Decomposition of Ozone time series")
### Training Arima
train_ts<-ts(pol_ts,start = c(2016,01),end=c(2018,12),frequency = 12)
train_pol_fit_arima<-auto.arima(train_ts)
train_pol_fit_arima
train_forecast_arima<-forecast(train_pol_fit_arima,24)
train_forecast_arima_df<-data.frame(train_forecast_arima)
train_forecast_arima_pt_forecast<-train_forecast_arima_df$Point.Forecast
forecast_train_arima<-data.frame("x"=as.Date(pol_flow$date[181:204],format="%Y - %m - %d"),"y"=train_forecast_arima_pt_forecast)
actual_train_arima<-data.frame("x"=as.Date(pol_flow$date,format="%Y - %m - %d"),"y"=pol_flow$count)
ggplot(forecast_train_arima,aes(x,y)) +
geom_line(aes(color="First line")) +
geom_line(data = actual_train_arima,aes(color="Second line")) +
xlab("Year") +
ylab("Count")+
labs(colors="Series") +
ggtitle("Training Vs Testing plot")+
scale_colour_manual(values = c("red","green"),
labels=c("Forecast", "Actual"))
install.packages("png")
stations <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/data/Madrid_pollution_level_dataset/stations.csv")
View(stations)
madrid_2017 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/data/Madrid_pollution_level_dataset/csvs_per_year/madrid_2017.csv")
View(madrid_2017)
madrid_2016 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/data/Madrid_pollution_level_dataset/csvs_per_year/madrid_2016.csv")
View(madrid_2016)
madrid_2015 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/data/Madrid_pollution_level_dataset/csvs_per_year/madrid_2015.csv")
View(madrid_2015)
View(madrid_2017)
madrid_2014 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/data/Madrid_pollution_level_dataset/csvs_per_year/madrid_2014.csv")
View(madrid_2014)
madrid_2013 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/data/Madrid_pollution_level_dataset/csvs_per_year/madrid_2013.csv")
View(madrid_2013)
madrid_2012 <- read.csv("~/Documents/Universidad/Master/dataprocesses/Práctica/dataProcessesProject/data/Madrid_pollution_level_dataset/csvs_per_year/madrid_2012.csv")
View(madrid_2012)
library(dplyr)
library(utils) # for the read.csv
library(data.table) # For the rbindlist
library(ggplot2) # for plots
library(ggfortify)
library(gridExtra)
library(forecast)
# Group CSVs
madrid_list <- list(madrid_2012, madrid_2013, madrid_2014, madrid_2015,madrid_2016, madrid_2017)
madrid_temp <- as.data.frame(rbindlist(madrid_list, fill = T))
# Data Wrangling
madrid_final <- madrid_temp[with(madrid_temp, order(date)),]
madrid_final$date<-as.POSIXct(madrid_final$date,format = "%Y-%m-%d %H:%M:%S", tz='CET')
#################### Time series ########################################
autoplot(madrid_final, ts.colour = "blue", ts.linetype = "dashed")
pollutant <- madrid_final %>%
as.data.frame %>%
mutate(date_ymd=as.Date(date,format="%Y-%m-%d")) %>%
group_by(date_ymd) %>%
summarise(max_pol=max(O_3,na.rm=TRUE)) %>% # Can change the pollutant name here.Rest all codes works without change
as.data.frame %>%
mutate(y_m=paste(substr(date_ymd,1,nchar(date_ymd)+2),"-01")) %>%
group_by(y_m) %>%
summarise(avg_emission=mean(max_pol,na.rm=TRUE))
#################### Time series ########################################
autoplot(madrid_final, ts.colour = "blue", ts.linetype = "dashed")
pollutant <- madrid_final %>%
as.data.frame %>%
mutate(date_ymd=as.Date(date,format="%Y-%m-%d")) %>%
group_by(date_ymd) %>%
summarise(max_pol=max(O_3,na.rm=TRUE)) %>% # Can change the pollutant name here.Rest all codes works without change
as.data.frame %>%
mutate(y_m=paste(substr(date_ymd,1,nchar(date_ymd)+2),"-01")) %>%
group_by(y_m) %>%
summarise(avg_emission=mean(max_pol,na.rm=TRUE))
pol_flow <- data.frame("date"=as.Date(pollutant$y_m,format="%Y - %m - %d"),"count"=pollutant$avg_emission)
#converting to time series
pol_ts<-ts(pol_flow$count,frequency = 12,start = c(2012,01))
#ggplot format of ts plot
autoplot(pol_ts, ts.colour="darkgreen") +
xlab('Date') +
ylab('Count') +
ggtitle('Time Series of Ozone Pollutant')
#################### Time series ########################################
autoplot(madrid_final, ts.colour = "blue", ts.linetype = "dashed")
#################### Time series ########################################
pollutant <- madrid_final %>%
as.data.frame %>%
mutate(date_ymd=as.Date(date,format="%Y-%m-%d")) %>%
group_by(date_ymd) %>%
summarise(max_pol=max(O_3,na.rm=TRUE)) %>% # Can change the pollutant name here.Rest all codes works without change
as.data.frame %>%
mutate(y_m=paste(substr(date_ymd,1,nchar(date_ymd)+2),"-01")) %>%
group_by(y_m) %>%
summarise(avg_emission=mean(max_pol,na.rm=TRUE))
pol_flow <- data.frame("date"=as.Date(pollutant$y_m,format="%Y - %m - %d"),"count"=pollutant$avg_emission)
#converting to time series
pol_ts<-ts(pol_flow$count,frequency = 12,start = c(2012,01))
#ggplot format of ts plot
autoplot(pol_ts, ts.colour="darkgreen") +
xlab('Date') +
ylab('Count') +
ggtitle('Time Series of Ozone Pollutant')
View(madrid_2015)
View(madrid_2015)
